{
  "$id": "/schema/closure",
  "type": "object",
  "properties": {
    "identifier": {
      "type": "string"

    },
    "foi_exemption_asserted": {
      "type": [
        "string",
        "null"
      ],
      "csvSchema": "if($closure_type/is(\"open_on_transfer\"),empty, xDateTime) if($closure_type/is(\"closed_for\"),not($closure_start_date))"
    },
    "foi_exemption_code": {
      "type": "string",
      "pattern": "^$|^((,)?2[3,4,6,8,9]|(,)?27\\([1,2]\\)|(,)?3[1,2,3,4,6,8,9]|(,)?35\\(1\\)\\([a,b,c]\\)|(,)?37\\(1\\)\\([a,b]\\)|(,)37\\(1\\)\\(a[a,c,d]\\)|(,)4[1,2,3,4]|(,)40\\(2\\)|(,)43\\([1,2]\\))+$",
      "csvSchema": "if($closure_type/is(\"open_on_transfer\"),is(\"open\"),regex(\"(?:2[34689]|27\\([12]\\)|30\\([12]\\)|3[1-4689]|35\\(1\\)\\([abcd]\\)|37\\(1\\)\\((?:(?:a|ac|ad|b)\\)|a\\) old)|40\\(2\\)|43\\(2\\)|4[1-4])(?:,\\s?(?:2[34689]|27\\([12]\\)|30\\([12]\\)|3[1-4689]|35\\(1\\)\\([abcd]\\)|37\\(1\\)\\((?:(?:a|ac|ad|b)\\)|a\\) old)|40\\(2\\)|4[1-4]))*\"))"
    },
    "closure_type": {
      "default": "open_on_transfer",
      "enum": [
        "closed_review",
        "closed_for",
        "normal_closure_before_foi",
        "closed_until",
        "closed_access_reviewed",
        "reclosed_in",
        "open_on_transfer",
        "CLOSED",
        "OPEN",
        null
      ],
      "csvSchema": "any(\"closed_review\",\"retained_until\",\"closed_for\",\"open_on_transfer\")"
    },
    "closure_period": {
      "type": [
        "number",
        "null"
      ]
    },
    "closure_start_date": {
      "type": [
        "string",
        "null"
      ],
      "csvSchema": "if($closure_type/is(\"open_on_transfer\"),empty,xDateTime)"
    },
    "description_public": {
      "enum": [
        "TRUE",
        "true",
        "FALSE",
        "false",
         null
      ],
      "csvSchema": "if($description_alternate/notEmpty,is(\"FALSE\") or is(\"false\"),is(\"true\") or is(\"TRUE\")) or empty"
    },
    "description_alternate": {
      "type": [
        "string",
        "null"
      ],
      "csvSchema": "if($description_public/any(\"FALSE\",\"false\"),notEmpty,empty)"
    }
  },
  "allOf": [

    {
      "if": {
        "properties": {
          "closure_type": {
            "const": "open_on_transfer"
          }
        }
      },
      "then": {
        "properties": {
          "closure_period": {
            "type": ["number","null"]
          },
          "closure_start_date": {
            "type": [ "string", "null"],
            "maxLength": 0
          },
          "foi_exemption_asserted": {
            "type": ["string", "null"],
            "maxLength": 0
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "closure_type": {
            "not": {
              "const": "OPEN"
            }
          }
        }
      },
      "then": {
        "properties": {
          "closure_period": {
            "minimum": 1,
            "maximum": 100
          },
          "closure_start_date": {
            "inThePast": "future_date"
          },
          "foi_exemption_code": {
            "type": "string",
            "pattern": "^((,)?2[3,4,6,8,9]|(,)?27\\([1,2]\\)|(,)?3[1,2,3,4,6,8,9]|(,)?35\\(1\\)\\([a,b,c]\\)|(,)?37\\(1\\)\\([a,b]\\)|(,)37\\(1\\)\\(a[a,c,d]\\)|(,)4[1,2,3,4]|(,)40\\(2\\)|(,)43\\([1,2]\\))+$"
          }
        }
      }
    },
    {
      "if" : {
        "properties": {
          "description_public": {
             "pattern": "TRUE|true"
          }
        }
      },
      "then": {
        "properties": {
          "description_alternate": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "else": {
        "properties": {
          "description_alternate": {
            "type": ["string","null"],
            "maxLength": 0
          }
        }
      }

    }
  ],
  "dependencies": {
    "closure_type": [
      "closure_period"
    ]
  },
  "required": [
    "identifier",
    "foi_exemption_asserted",
    "closure_period",
    "closure_start_date",
    "description_public",
    "description_alternate"
  ]
}